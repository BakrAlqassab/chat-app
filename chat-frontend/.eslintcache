[{"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\index.js":"1","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\reportWebVitals.js":"2","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\App.js":"3","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\components\\Chat\\Chat.js":"4","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\components\\Auth\\Login.js":"5","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\components\\Auth\\Register.js":"6","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\services\\authServices.js":"7","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\services\\api.js":"8","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\store\\index.js":"9","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\store\\reducers\\index.js":"10","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\store\\reducers\\auth.js":"11","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\store\\actions\\auth.js":"12","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\components\\Router\\ProtectedRoute.js":"13","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\components\\Chat\\component\\Navbar\\Navbar.js":"14","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\components\\Modal\\Modal.js":"15"},{"size":625,"mtime":1610531100394,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1214,"mtime":1610636307551,"results":"19","hashOfConfig":"17"},{"size":292,"mtime":1610630498519,"results":"20","hashOfConfig":"17"},{"size":2328,"mtime":1611065549183,"results":"21","hashOfConfig":"17"},{"size":3013,"mtime":1610540561221,"results":"22","hashOfConfig":"17"},{"size":1062,"mtime":1610712470890,"results":"23","hashOfConfig":"17"},{"size":164,"mtime":1610465771009,"results":"24","hashOfConfig":"17"},{"size":214,"mtime":1610530795990,"results":"25","hashOfConfig":"17"},{"size":135,"mtime":1610966187363,"results":"26","hashOfConfig":"17"},{"size":933,"mtime":1610715224038,"results":"27","hashOfConfig":"17"},{"size":772,"mtime":1610638209874,"results":"28","hashOfConfig":"17"},{"size":532,"mtime":1610545746712,"results":"29","hashOfConfig":"17"},{"size":4533,"mtime":1610718866761,"results":"30","hashOfConfig":"17"},{"size":1054,"mtime":1610717553939,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"o41j9p",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\index.js",[],["66","67"],"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\reportWebVitals.js",[],"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\App.js",[],"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\components\\Chat\\Chat.js",[],"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\components\\Auth\\Login.js",[],"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\components\\Auth\\Register.js",[],"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\services\\authServices.js",[],"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\services\\api.js",[],["68","69"],"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\store\\index.js",[],"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\store\\reducers\\index.js",[],"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\store\\reducers\\auth.js",[],"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\store\\actions\\auth.js",[],"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\components\\Router\\ProtectedRoute.js",[],"B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\components\\Chat\\component\\Navbar\\Navbar.js",["70"],"import React, { useState, Fragment } from \"react\";\r\nimport \"./Navbar.scss\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { logout } from \"../../../../store/actions/auth\";\r\nimport Modal from \"../../../Modal/Modal\";\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n\r\n  const [firstName, setFirstName] = useState(user.firstName);\r\n  const [lastName, setLastName] = useState(user.lastName);\r\n  const [email, setEmail] = useState(user.email);\r\n  const [gender, setGender] = useState(user.gender);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    const form = {firstName,lastName,email,gender,avatar }\r\n\r\n    const formData = new FormData()\r\n\r\n    for(const key in form)\r\n    {\r\n\r\n\r\n      formData.append(key,form[key])\r\n    }\r\n\r\n    //dispatch\r\n\r\n    \r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  const [showProfileOptions, setShowProfileOptions] = useState(false);\r\n  const [showProfileModal, setShowProfileModal] = useState(false);\r\n  return (\r\n    <div id=\"navbar\" className=\"card-shadow\">\r\n      <h2> Chat </h2>\r\n      <div\r\n        onClick={() => setShowProfileOptions(!showProfileOptions)}\r\n        id=\"profile-menu\"\r\n      >\r\n        <img width=\"40\" height=\"40\" src={user.avatar} alt=\"avatar\" />\r\n        <p>\r\n          {\" \"}\r\n          {user.firstName} {user.lastName}\r\n        </p>\r\n        <FontAwesomeIcon icon=\"caret-down\" className=\"fa-icon\" />\r\n\r\n        {showProfileOptions && (\r\n          <div id=\"profile-options\">\r\n            <p\r\n              onClick={() => {\r\n                setShowProfileModal(true);\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Update profile\r\n            </p>\r\n            <p onClick={() => dispatch(logout())}>Log Out</p>\r\n          </div>\r\n        )}\r\n\r\n        {showProfileModal && (\r\n          <Modal click={() => setShowProfileModal(false)}>\r\n            <Fragment key=\"header\">\r\n              <h3 className=\"m-0\">updateProfile</h3>\r\n            </Fragment>\r\n            <Fragment key=\"body\">\r\n              <form>\r\n                <div className=\"input-field mb-1\">\r\n                  <input\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                    value={firstName}\r\n                    required=\"required\"\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"input-field mb-1\">\r\n                  <input\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                    value={lastName}\r\n                    required=\"required\"\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"input-field mb-1\">\r\n                  <input\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    value={email}\r\n                    required=\"required\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                </div>\r\n                <div className=\"input-field mb-1\">\r\n                  <select\r\n                    onChange={(e) => setGender(e.target.value)}\r\n                    value={gender}\r\n                    required=\"required\"\r\n                  >\r\n                    <option value=\"male\"> Male</option>\r\n                    <option value=\"female\"> Female</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"input-field mb-2\">\r\n                  <input\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    value={password}\r\n                    required=\"required\"\r\n                    type=\"password\"\r\n                    placeholder=\"Passowrd\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"input-field mb-2\">\r\n                  <input\r\n                    onChange={(e) => setAvatar(e.target.files[0])}\r\n                    type=\"file\"\r\n                  />\r\n                </div>\r\n              </form>\r\n            </Fragment>\r\n            <Fragment key=\"footer\">\r\n              <button className=\"btn-success\">UPDATE</button>\r\n            </Fragment>\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","B:\\Udemy\\React\\chat-app\\chat-frontend\\src\\components\\Modal\\Modal.js",["71"],"import React from \"react\";\r\nimport \"./Modal.scss\";\r\n\r\nconst Modal = (props) => {\r\n\r\n    const findByKey =(name) =>  props.children.map (child => {\r\n                if(child.key === name) return child\r\n\r\n\r\n        })\r\n\r\n        const closeModal =(e) => {\r\n            e.stopPropagation();\r\n\r\n\r\n        if(e.target.classList.contains('modal-close'))\r\n        {\r\n                    return props.click()\r\n\r\n        }\r\n\r\n        }\r\n    \r\n  return (\r\n    <div className=\"modal-mask modal-close\" onClick={closeModal}>\r\n      <div className=\"modal-wrapper\">\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-header\">\r\n          {findByKey('header')}\r\n          </div>\r\n\r\n          <div className=\"modal-body\">\r\n                {findByKey('body')}\r\n                </div>\r\n\r\n          <div className=\"modal-footer\">\r\n          <button className='modal-close' onClick={closeModal}>CLOSE</button>\r\n                {findByKey('footer')}\r\n                </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":20,"column":9,"nodeType":"80","messageId":"81","endLine":20,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":6,"column":59,"nodeType":"84","messageId":"85","endLine":6,"endColumn":61},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],["86"],["87"],"no-unused-vars","'submitForm' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]